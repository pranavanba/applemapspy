from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

def get_place_names(url):
    # Configure Selenium options
    options = webdriver.ChromeOptions()
    options.add_argument("--headless")  # Run Chrome in headless mode
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")

    # Initialize Chrome driver
    driver = webdriver.Chrome(options=options)

    # Load the webpage
    driver.get(url)

    # Wait for the place names to be loaded
    wait = WebDriverWait(driver, 10)  # Adjust the timeout as needed
    place_names = wait.until(EC.visibility_of_all_elements_located((By.CLASS_NAME, "mw-collection-place-name")))

    # Extract the place names
    place_names = [name.text for name in place_names]

    # Quit the driver
    driver.quit()

    return place_names

# Example usage
guide_url = "https://guides.apple.com/?ug=CgxTZWF0dGxlIEZvb2QSDQiuTRC9pK67lqLtwGoSDgiuTRDXuO3gk4WdgM0BEg4Irk0Qy6rBx6v%2F%2FsKFARIOCK5NELvMj8O99vKv7gESDQiuTRC%2Fw%2F33%2FojP8D8SDQiuTRDF%2F9Ks2fO3wmgSDgiuTRDPjKPB6L3dhuUBEg0Irk0Q4va3l%2Fqou8kqEg4Irk0Qw6eJ3P2drZHvARINCK5NEOXnrtuPodqCHRINCK5NEMPhstrn75zJVhIOCK5NEO6f65q74u2CmQESDgiuTRCKi6ibg%2FDyx7wBEg0Irk0Q65yftsGDjcU5Eg4Irk0Q7%2BuXh6qF49fWARIOCK5NEKP5mvqVgvP8qQESDQiuTRDBkpj43OPz%2FBcSDgiuTRCRu7GP1rGs7NgBEg0Irk0QldjptOfAkZ5oEg0Irk0QwuzP26frvu0bEg4Irk0Qi62ch8nchu6ZARIOCK5NENH13J6fuaD1qQESDQiuTRDXrOG%2BuZbAtDISDgiuTRCR3ueWxsHr0tEBEg0Irk0QkvrK3uGku%2FdPEg0Irk0Q%2Be614a%2Fq4bVFEg0Irk0QuPG%2BtJ6Nud9TEg0Irk0QrrD4g5nc5f9NEg4Irk0QxLyrtLW0mrWTARINCK5NELTKiYvd9MqxTxIOCK5NEPCsscH0rIfUrwESDgiuTRDg28z8yaO219UBEg0Irk0Q553crtrB6OI7Eg0Irk0Qj6eTtrrfu78QEg0Irk0Q2Kf9w8r4hOYwEg0Irk0Q0Pjpp6XSzYhPEgwIrk0Qgrqp6K6JzHgSDQiuTRDCxrjSuuWoyEISDgiuTRCi8t3Vro%2BQjtsBEg0Irk0QmpndnavVs%2FFlEg4Irk0Q09Tz39%2FA7vr9ARINCK5NEPOo78XTqPXpEBINCK5NENvd%2BNSknrryYhINCK5NEOeWvsLbjNuIYxIOCK5NEI2sjIvw9ZeU%2BAESDQiuTRDu0u6NsYeh1UsSDgiuTRDNhJa5s7eI3Y0BEg0Irk0Q4LvkhY2Z46txEg0Irk0Q2%2BW8sKrxxrkdEg4Irk0Qkry9p42A4aynARIOCK5NENTV273nt4XK3QESDgiuTRDk5OuQ%2BNy8gv8BEg4Irk0QkIC56pmy2diAARINCK5NEMfRjorj2YfPGRIOCK5NENjwx7%2Bm4La6ogESDQiuTRC15bHEtu32qDQSDQiuTRD3nJ2K%2FNTjp2sSDQiuTRC3w67Dk%2BbkomISDgiuTRCP66z416TguZsBEg0Irk0QzKfBoJmlw7xtEg0Irk0QvZiTgKyIzN4sEg0Irk0Ql9rBgoaY1YIwEg4Irk0Q4OqaqNCElcC%2FARIOCK5NEITc5uXCvtrB2wESDgiuTRD2sMuG2um1jJMBEg0Irk0QvJr0r8X8rJgbEg0Irk0QkI6JuevavuMhEg4Irk0Q%2FNbfr%2By76PC%2FARIOCK5NEMSJncW3uIbe1wESDQiuTRDU8Jj9yMiwkjoSDgiuTRC0uczKwtrFlsUBEg4Irk0QlsuXkuPo2aLFARINCK5NELfIreuCk9qTMxINCK5NEPXWpb7ilPGTQhIOCK5NEPKP08qHzLH0qgESDQiuTRDU19vphd%2FbpUESDgiuTRCo%2BfPoj8SJ%2FMEBEg0Irk0QgOrumZ%2Br5d88Eg0Irk0QufaG6uzBx8JDEg4Irk0Qgo%2Fe4Pux97vnARIOCK5NEMvD%2F%2B7jmsPGswESDQiuTRDqpKjhltTEzzUSDgiuTRD1yb2%2F3IG%2FspABEg0Irk0Qn%2FSCpvOdk8pYEg0Irk0Qi6bXtKeemvJpEg0Irk0Q8uCWt46bz4BMEg4Irk0Qwvj4kKKb6sDcARIOCK5NEM6npISkqOnxvAESDgiuTRC3ppnV0PbmyucBEg0Irk0Q3JvUtvrn6MhkEg4Irk0Q2vHB7ai0rLzxARIOCK5NEMqLu5HNmdL8kAESDQiuTRDlrPizn8L6rzoSDgiuTRC%2FhJqGn8uXlqgBEg4Irk0Q%2BJy82NiXn%2BPoARINCK5NEN7o1eyLqq7IMxIOCK5NEPzUkc%2B1iKLKlwESDgiuTRCYuNXWqeSS4ugBEg0Irk0QsP%2FG38Pj2d0%2BEg0Irk0Qu%2Bvd2YDJ6%2Bd6Eg4Irk0Q19211rGh67S0ARIOCK5NEI6gr8D9yo%2FYkgESDgiuTRCd9KjOtffYv70BEg4Irk0QuYWShqHM1dSiARIOCK5NELil7PKU97Sv8QESDgiuTRCS6tD%2Bx9GiqbABEg0Irk0QxcOO57jOz8gPEg4Irk0QxrnL1JaPk%2BrUARIOCK5NEOGM99Pb%2FrOytwESDgiuTRCV%2B%2B3zks2ku7IBEg0Irk0Q9dmtx6S%2FwdlJEg4Irk0Qq4v18o7SoqSOARINCK5NEOC1neTFqLuoYBINCK5NELrvnIbqtPWMYxIOCK5NENHa4YzF44bxrAESDQiuTRC8rvex0oKQzBkSDgiuTRDdvNG0q8XhgNQBEg0Irk0QqPWmhdrF85NBEg4Irk0Q4dbLhOuwqevEARINCK5NENb%2Fyo6LwNj9ahIOCK5NEKCLhfnY2em55gESDQiuTRDhk4OSuoGNqSYSDgiuTRDH%2Ffn7tbfTkrYBEg0Irk0QgZyevYqP2q0SEg0Irk0QtMrFntKSwJo2Eg4Irk0Q74%2FG39iz7fevARIOCK5NEOerrpXCoZHD0wESDgiuTRDT0a6Q0cDlkb4BEg0Irk0QvbDM36fm79UmEg0Irk0Qouuqi5aJ5fIwEg4Irk0Q1pT%2F2dWsz5bvARIOCK5NENfJqNa0%2F4HQlwESDgiuTRD4%2BP2v%2BZOA8s4BEg0Irk0Qn4TRkYnrxsdPEg0Irk0QtsCL9vSd25x2Eg4Irk0Qhp71kdfx35qEARIOCK5NEKmczLrm%2BoaAmwESDgiuTRDNzoSXpqbMof8BEg4Irk0Qq72phaj6jYzDARIOCK5NEP%2FS78PVlcjV9AESDgiuTRCT5eWvpJDD2c4BEg0Irk0Q5OvkwfD8lYY9Eg4Irk0Q7Nvij9b7%2BsjtARIOCK5NEL3viuGr353lwAESDgiuTRCiip2e1Zqi1vYBEg4Irk0QgIvit%2BL5oJPkARINCK5NEKzvhNuTh%2FXODBIOCK5NEOaV7InxjcilywESDQiuTRDnud2qvcKT7ywSDgiuTRD85aXwgpad3b0BEg4Irk0QgNSW5InmjZW7ARIOCK5NEJuPkquZsY7b1AESDgiuTRCHtc%2Fh97%2B5xYEBEg0Irk0Qt%2F76tIXT7e1GEg0Irk0Q7duOsJqShZAdEg4Irk0Q4ono0%2BbigJzZARIOCK5NENP8nfCLyqztvAESDQiuTRCtptOBxYCmnHISDQiuTRCMi57vvsqi0jUSDQiuTRDylcjH8vi6v0gSDgiuTRDtq4%2B%2F96T%2Bne4BEg4Irk0QpJ%2BLzoTwlt%2FbARIOCK5NEMTH%2BNqohZHjmgESDQiuTRCY2rq4nNS%2FzBQSDgiuTRCBpcbB0%2Bu2i98BEg4Irk0QzMH3oo2k0db%2FARIOCK5NEMf8iOe7t%2B%2Fr0QESDQiuTRD2oNy41sOu9wESDgiuTRD5pIX7oaLwpJABEg4Irk0Q9ISmkPmqzPeSARIOCK5NEL3IxdzJkK%2FYpgESDQiuTRCo2P%2F9s%2Bma%2FyISDQiuTRCTrdKN8qWbkTgSDQiuTRCarcS9h8WLqFUSDgiuTRDrruS%2F7Paw06QBEg0Irk0QuuX75sTU2c9AEg4Irk0Qsua%2B5eyj9u6QARINCK5NENnH2e6Kiq39KRIOCK5NEO635YrGhsrDmgESDQiuTRDPu%2FPL6%2FTp0HoSDQiuTRD%2B4eHd94mg%2BX0SDgiuTRC4%2FLTB%2BaXn5PwBEg0Irk0Qyv%2F00vb8hbNJEg0Irk0Qh%2FDptb3B3eczEg4Irk0Q0vSszOvWovnQARINCK5NELeHzsz%2BkODwRxIOCK5NEMiyy5r92u3h5AESDgiuTRD0qeK%2FyuC70KUBEg0Irk0Q1%2Fjx%2BK%2B1h84QEg4Irk0QmqT0wpCE6P7sARINCK5NEI6rjrz3hu%2FFZxINCK5NEPf3jMOq3%2BSnahIOCK5NELWzusTv0caU5gESDQiuTRD%2BgfHI8bHe4lgSDQiuTRCVp5%2BxssvAgAQSDQiuTRCvzPzblKLB7iQSDgiuTRD%2Fh87z5vzQtdoB"  # Replace with the actual guide URL
place_names = get_place_names(guide_url)

# Print the extracted place names
print("Place names:")
for name in place_names:
    print(name)

print(len(place_names))
